import React,{useState,useContext} from 'react'
import { useRouter } from 'next/router'
import { ThemeContext } from '../Context/ThemeContext'
import { toast } from 'react-toastify';
import axios from 'axios'


const invite = () => {

  //state variables
  const [firstname,setfirstname]=useState("")
  const [lastname,setlastname]=useState("")
  const [email,setemail]=useState("")
  const [password,setpassword]=useState("")
  const [cpassword,setcpassword]=useState("")

  //otp modal states
  const[one,setone]=useState('')
  const[two,settwo]=useState('')
  const[three,setthree]=useState('')
  const[four,setfour]=useState('')

  const[otpModal,setotpModal]=useState(false)
  const[otpcode,setotpcode]=useState('')

  const[ disable,setdisable]=useState(false)

  //useRouter
  const { mobile,setLoader } = useContext(ThemeContext)
  const router=useRouter()
  const {_id}=router.query

  const hideModla = () =>{
    router.push('/')
  }
//  old signup method 
  const signup =async (e) =>{
    e.preventDefault()
    setdisable(true)
    if(email.includes('@')){
        if(password==cpassword){
            if(firstname.length>0 && lastname.length>0){
        const data = {email,password,firstname,lastname,_id} 
            axios.post('/api/post/referralsignup',data).then(res=>{
                if(res.data==true){
                toast.success('Account created now login', {
                    position: "top-right",
                        autoClose: 2000,
                        hideProgressBar: false,
                        closeOnClick: true,
                        pauseOnHover: true,
                        draggable: true,
                        progress: undefined,
                        theme: "light",
                    });
                    router.push('/')
                }
                else{
                    toast.error('Try again ', {
                        position: "top-right",
                            autoClose: 2000,
                            hideProgressBar: false,
                            closeOnClick: true,
                            pauseOnHover: true,
                            draggable: true,
                            progress: undefined,
                            theme: "light",
                        });
                }
            })
        }
        else{
            toast.error('Please fill remaining data', {
                position: "top-right",
                    autoClose: 2000,
                    hideProgressBar: false,
                    closeOnClick: true,
                    pauseOnHover: true,
                    draggable: true,
                    progress: undefined,
                    theme: "light",
                });
        }  

        }

        else{
            toast.error('Password and Confirm Password should be same ', {
                position: "top-right",
                    autoClose: 2000,
                    hideProgressBar: false,
                    closeOnClick: true,
                    pauseOnHover: true,
                    draggable: true,
                    progress: undefined,
                    theme: "light",
                });
        }   


    }
    else{
        toast.error('inccorect email address ', {
            position: "top-right",
                autoClose: 2000,
                hideProgressBar: false,
                closeOnClick: true,
                pauseOnHover: true,
                draggable: true,
                progress: undefined,
                theme: "light",
            });
    }

      
        
}

//new signup method
const signupnew = (e) => {
  e.preventDefault();
  if(password==cpassword)
  {

  setdisable(true)
  setLoader(true)
  if(password.length>=10){
  const data = { email, password, firstname, lastname, cpassword ,_id};
  axios.post("/api/post/otp", data).then((res) => {
    
    alert(res.data.otp)
    if (res.data.success == true) {
      setotpcode(res.data.otp)
      setotpModal(true)
      setLoader(false)
    } else {
      setdisable(false)
      toast.error(res.data.error, {
        position: "top-right",
        autoClose: 2000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "light",
      });
    }
    setLoader(false)
  }).catch(e=>{alert('Check your network');setdisable(false)});
}
else{
setdisable(false)
toast.error('Password must be 10 characters', {
  position: "top-right",
  autoClose: 2000,
  hideProgressBar: false,
  closeOnClick: true,
  pauseOnHover: true,
  draggable: true,
  progress: undefined,
  theme: "light",
});
setLoader(false)
}
}
else{
setdisable(false)
toast.error('Password not match', {
  position: "top-right",
  autoClose: 2000,
  hideProgressBar: false,
  closeOnClick: true,
  pauseOnHover: true,
  draggable: true,
  progress: undefined,
  theme: "light",
});
}

};

//cofirmation otp
const confirmOTP =()=>{

  if(otpcode==one+two+three+four)
  {
    const data = { email, password, firstname, lastname, cpassword ,_id };
    axios.post("/api/post/referralsignup", data).then((res) => {
    setLoader(true)
    
      if (res.data.success==true) {
        window.location.replace('/')
        toast.success("Successfully signup", {
          position: "top-right",
          autoClose: 2000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "light",
        });
      } else {
        setdisable(false)
        toast.error(res.data.error, {
          position: "top-right",
          autoClose: 2000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "light",
        });
        setTimeout(() => {
          window.location.reload()
        }, 2000);
      }
      setLoader(false)
    }).catch(e=>{alert('Check your network');setdisable(false)});

  }else{
    toast.success('OTP error :(', {
      position: "top-right",
      autoClose: 2000,
      hideProgressBar: false,
      closeOnClick: true,
      pauseOnHover: true,
      draggable: true,
      progress: undefined,
      theme: "light",
    });
  }
}


if(!mobile)
{
return (
  <>
  { otpModal && 
  <div className="PlanForm-Head-modal-auth refferal-modal-invite">
   <div className='OPT-CENTER-MAI-mob'>

<form class="form-otp">
<div class="title">OTP
</div> 
<div class="title">Verification Code
</div> 
<p class="message">We have sent a verification code to your email</p>
<div class="inputs">
     <input value={one} onChange={(e)=>{setone(e.target.value)}} id="input1" type="text" maxlength="1"/>
     <input value={two} onChange={(e)=>{settwo(e.target.value)}} id="input2" type="text" maxlength="1"/>
    <input value={three} onChange={(e)=>{setthree(e.target.value)}} id="input3" type="text" maxlength="1"/>
    <input value={four} onChange={(e)=>{setfour(e.target.value)}} id="input4" type="text" maxlength="1"/>
        </div>
        <button class="action" onClick={confirmOTP}>verify me</button>
          </form>
          </div>
</div>}
{!otpModal && (
<>
      <div className="PlanForm-Head-modal-auth refferal-modal-invite">
        <div className="Invest-Container-authform" id="zain">
          <div className="title  authform-cancel-modal-button">
          <img src="remove_bg.png" className="planform-logo-web"/>

            {" "}
            <span className='span-title-palnform-web'>Referral Invite</span>  
            <h1 onClick={hideModla}>X</h1>
          </div>
          <div className="content">
            <form action="#">
              <div className="user-details-auth">
                
                  
                    <div className="input-box-auth">
                      <span className="details auth-authform-fields">
                        First Name
                      </span>
                      <input
                        type="text"
                        onChange={(e) => {
                          setfirstname(e.target.value);
                        }}
                        placeholder="Enter your name"
                        required
                      />
                    </div>
                    <div className="input-box-auth">
                      <span className="details ">Last Name</span>
                      <input
                        type="text"
                        onChange={(e) => {
                          setlastname(e.target.value);
                        }}
                        placeholder="Enter your lastname"
                        required
                      />
                    </div>
                  
                
                <div className="input-box-auth">
                  <span className="details">Email</span>
                  <input
                    type="text"
                    onChange={(e) => {
                      setemail(e.target.value);
                    }}
                    placeholder="Enter your email"
                    required
                  />
                </div>
                <div className="input-box-auth">
                  <span className="details">Password</span>
                  <input
                    type='text'
                    onChange={(e) => {
                      setpassword(e.target.value);
                    }}
                    placeholder="Enter your password"
                    required
                  />
                </div>
                  <div className="input-box-auth">
                    <span className="details">Confirm password</span>
                    <input
                      type='text'
                      onChange={(e) => {
                        setcpassword(e.target.value);
                      }}
                      placeholder="Enter your password"
                      required
                    />
                  </div>
              </div>
              
            <div className="button-auth">
              
                <input className='' type="button" value="Signup" disabled={disable} onClick={signupnew} />
            </div>
            </form>
          </div>
        </div>
      </div>
      </>
      )}
    </>
  );
}else{
  return (
    <>
    { otpModal && 
  <div className="PlanForm-Head-modal-auth refferal-modal-invite">

     <div className='OPT-CENTER-MAI-mob'>

<form class="form-otp">
<div class="title">OTP
</div> 
<div class="title">Verification Code
</div> 
<p class="message">We have sent a verification code to your email</p>
<div class="inputs">
     <input value={one} onChange={(e)=>{setone(e.target.value)}} id="input1" type="text" maxlength="1"/>
     <input value={two} onChange={(e)=>{settwo(e.target.value)}} id="input2" type="text" maxlength="1"/>
    <input value={three} onChange={(e)=>{setthree(e.target.value)}} id="input3" type="text" maxlength="1"/>
    <input value={four} onChange={(e)=>{setfour(e.target.value)}} id="input4" type="text" maxlength="1"/>
        </div>
         <button class="action" onClick={confirmOTP}>verify me</button>
          </form>
        </div>
</div>}
{!otpModal && (
<>
      <div className="PlanForm-Head-modal-auth refferal-modal-invite">
        <div className="Invest-Container-invite-mob" id="zain">
          <div className="title  authform-cancel-modal-button">
          <img src="remove_bg.png" className="planform-logo-web"/>

            {" "}
            <span className='span-title-palnform-web'>Referral Invite</span>  
            <h1 onClick={hideModla}>X</h1>
          </div>
          <div className="content">
            <form action="#">
              <div className="user-details-auth">
                
                  
                    <div className="input-box-auth">
                      <span className="details auth-authform-fields">
                        First Name
                      </span>
                      <input
                        type="text"
                        onChange={(e) => {
                          setfirstname(e.target.value);
                        }}
                        placeholder="Enter your name"
                        required
                      />
                    </div>
                    <div className="input-box-auth">
                      <span className="details ">Last Name</span>
                      <input
                        type="text"
                        onChange={(e) => {
                          setlastname(e.target.value);
                        }}
                        placeholder="Enter your lastname"
                        required
                      />
                    </div>
                  
                
                <div className="input-box-auth">
                  <span className="details">Email</span>
                  <input
                    type="text"
                    onChange={(e) => {
                      setemail(e.target.value);
                    }}
                    placeholder="Enter your email"
                    required
                  />
                </div>
                <div className="input-box-auth">
                  <span className="details">Password</span>
                  <input
                    type="text"
                    onChange={(e) => {
                      setpassword(e.target.value);
                    }}
                    placeholder="Enter your password"
                    required
                  />
                  
                </div>
                  <div className="input-box-auth">
                    <span className="details">Confirm password</span>
                    <input
                      type="text"
                      onChange={(e) => {
                        setcpassword(e.target.value);
                      }}
                      placeholder="Enter your password"
                      required
                    />
                  </div>
              </div>
              
            <div className="button-auth">
              
                <input className='' type="button" value="Signup" disabled={disable} onClick={signupnew} />
            </div>
            </form>
          </div>
        </div>
      </div>
      </>
      )}
    </>

  );
}

}

export default invite