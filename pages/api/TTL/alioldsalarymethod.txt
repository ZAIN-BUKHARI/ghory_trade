// const handler= async (req, res)=> {
//    //current DD/MM/YYY
//    const join = new Date();
//    const yyy = join.getFullYear() ;
//    let mmm = join.getMonth() + 1; // Months start at 0!
//    let ddd = join.getDate();
//    if (ddd < 10) ddd = '0' + ddd; 
//    if (mmm < 10) mmm = '0' + mmm;
//    const currentDate = ddd + '/' + mmm + '/' + yyy;
//     let user;
//     let plan;
//     let A=0;
//     let salary=0;
//     if(req.method=='POST'){
//         const {Userid} = req.body
//          user = await User.findOne({_id:Userid})
//          plan = await Plan.findOne({_id:user.planId})
//          let arr=[];
//          let sortedArr=[5]
           
            
//             for(let i=0;i<user.teams.length;i++)
//             {
//                 for(let j=i;j<arr.length;j++)
//                 {
//                     if(arr[j]['direct'].investment>arr[i]['direct'].investment && arr[i]['direct'].plan=='yes')
//                     {
//                         let temp =  arr[i]; 
//                         arr[i] = arr[j]
//                         arr[j] = temp;
//                     }
//                 }
//             }

//             A = arr.reduce((sum, data) => {
//                 if (data['direct'].plan === 'yes') {
//                   return sum + data['direct'].investment;
//                 }
//                 return sum;
//               }, 0);

//             sortedArr = arr.map((data)=>{
//                 if(data['direct'].plan=='yes') {
//                    return data
//                 }
//             })


//             A = A + plan.investment; //   total dirext monwy + leader money
//             user = await User.findOne({_id:Userid})
//             plan = await Plan.findOne({_id:user.planId})
          
//             console.log(A)
            
    //         if(sortedArr.length >= 80 && sortedArr.slice(0, 80).reduce((sum, data) => {if (data['direct'].plan === 'yes') { return sum + data['direct'].investment;}return sum;}, 0) >= 6000000){
    //             await User.updateOne({_id:user._id},{Rank:'ED',balance:(user.balance+13000)})
    //         }else if(sortedArr.length >= 40 && sortedArr.slice(0, 40).reduce((sum, data) => {if (data['direct'].plan === 'yes') { return sum + data['direct'].investment;}return sum;}, 0) >= 2000000){
    //             await User.updateOne({_id:user._id},{Rank:'MD',balance:(user.balance+1500)})
    //         }else if(sortedArr.length >= 20 && sortedArr.slice(0, 20).reduce((sum, data) => {if (data['direct'].plan === 'yes') { return sum + data['direct'].investment;}return sum;}, 0) >= 1000000){
    //             await User.updateOne({_id:user._id},{Rank:'SVP',balance:(user.balance+600)})
    //         }
    //         else if(sortedArr.length >= 10 && sortedArr.slice(0, 10).reduce((sum, data) => {if (data['direct'].plan === 'yes') { return sum + data['direct'].investment;}return sum;}, 0) >= 150000){
    //             await User.updateOne({_id:user._id},{Rank:'VP',balance:(user.balance+150)})
    //         }
    //         else if(sortedArr.length >= 5 && sortedArr.slice(0, 5).reduce((sum, data) => {if (data['direct'].plan === 'yes') { return sum + data['direct'].investment;}return sum;}, 0) >= 50000){
    //             await User.updateOne({_id:user._id},{Rank:'GM',balance:(user.balance+100)})
    //         }else if(sortedArr.length >= 4 && sortedArr.slice(0, 4).reduce((sum, data) => {if (data['direct'].plan === 'yes') { return sum + data['direct'].investment;}return sum;}, 0) >= 40000){
    //         //    for(let i=0;i<user.teams.length;i++)
    //         //    {
    //         //     if(
    //         //         currentDate==user.teams[i]['direct'].salaryDate[0]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[1]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[2]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[3]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[3]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[4]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[5]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[6]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[7]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[8]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[9]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[10] ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[11] 
    //         //         )
    //         //       {
    //               salary = user.balance + 400; 
    //               await User.updateOne({_id:user._id},{balance:salary})
    //         //       }
    //         //    }
                
    //         }else if(sortedArr.length >= 3 && sortedArr.slice(0, 3).reduce((sum, data) => {if (data['direct'].plan === 'yes') { return sum + data['direct'].investment;}return sum;}, 0) >= 30000){
    //         //     for(let i=0;i<user.teams.length;i++)
    //         //    {
    //             // if(
    //             //     currentDate==user.teams[i]['direct'].salaryDate[0]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[1]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[2]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[3]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[3]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[4]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[5]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[6]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[7]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[8]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[9]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[10] ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[11] 
    //             //     )
    //             //   {
    //               salary = user.balance + 300; 
    //               await User.updateOne({_id:user._id},{balance:salary})
    //             // }
    //         // }
    //         }else if(sortedArr.length >= 2 && sortedArr.slice(0, 2).reduce((sum, data) => {if (data['direct'].plan === 'yes') { return sum + data['direct'].investment;}return sum;}, 0) >= 20000){
    //             // for(let i=0;i<user.teams.length;i++)
    //             // {
    //             // if(
    //             //     currentDate==user.teams[i]['direct'].salaryDate[0]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[1]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[2]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[3]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[3]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[4]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[5]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[6]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[7]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[8]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[9]  ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[10] ||
    //             //     currentDate==user.teams[i]['direct'].salaryDate[11] 
    //             //     )
    //             //   {
    //               salary = user.balance + 200; 
    //               await User.updateOne({_id:user._id},{balance:salary})
                  
    //         //     }
    //         // }
    //         }else if(sortedArr.length >= 1 && sortedArr.slice(0, 1).reduce((sum, data) => {if (data['direct'].plan === 'yes') { return sum + data['direct'].investment;}return sum;}, 0) >= 10000){
    //         //     for(let i=0;i<user.teams.length;i++)
    //         //    {
    //         //     if(
    //         //         currentDate==user.teams[i]['direct'].salaryDate[0]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[1]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[2]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[3]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[3]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[4]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[5]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[6]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[7]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[8]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[9]  ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[10] ||
    //         //         currentDate==user.teams[i]['direct'].salaryDate[11] 
    //         //         )
    //         //       {
    //               salary = user.balance + 100; 
    //               await User.updateOne({_id:user._id},{balance:salary})
                  
    //         //     }
    //         // }
    //         }else{
    //             let directsalary=0;
    //             let indirectsalary=0;
    //         for(let i=0;i<sortedArr.length;i++)
    //         {
    //             user = await User.findOne({_id:Userid})
    //             const fivePercentSalary  = ((user.teams[i]['direct'].investment*20/100)*5/100)
    //             // const threePercentSalary = ((user.teams[i]['indirect'].investment*20/100)*3/100)
    //             if(user.teams[i]['direct'].plan=='yes' && user.teams[i]['direct'].investment>=100 ){ 

    //                 directsalary +=  user.balance + fivePercentSalary
    //               }
    //             }
    //             // await User.updateOne({_id:user._id},{balance:directsalary})
    //         }

    //     }
    //    res.status(200).json({success:true})
    // }
// else{

    // res.status(200).json({ error : 'request method is incorrect it should be post' })
// }
//   }/
